/// Helper function to get a slice for a specific glyph from a binary set
pub fn get_glyph_slice(raw_glyph: &'static [u8], index: usize, w: u32, h: u32) -> &'static [u8] {
    let byte_size = ((w as usize + 7) / 8) * h as usize;
    let start_idx = index * byte_size;
    let end_idx = start_idx + byte_size;
    &raw_glyph[start_idx..end_idx]
}

pub const GLYPH_VOLUME_OFF: [u8; 8] = [0x10, 0x30, 0xe5, 0xe2, 0xe2, 0xe5, 0x30, 0x10,];
pub const GLYPH_VOLUME_ON: [u8; 8] = [0x10, 0x31, 0xe5, 0xe5, 0xe5, 0xe5, 0x31, 0x10,];

pub const GLYPH_REPEAT_ONE: [u8; 8] = [0x02, 0x3f, 0x42, 0x58, 0x1a, 0x42, 0xfc, 0x40,];
pub const GLYPH_REPEAT_ALL: [u8; 8] = [0x02, 0x7f, 0x82, 0x80, 0x82, 0x82, 0x7c, 0x00,];
pub const GLYPH_SHUFFLE_TRACKS: [u8; 8] = [0x7e, 0x00, 0xfc, 0x00, 0x7e, 0x00, 0xfc, 0x00,];
pub const GLYPH_SHUFFLE_ALBUMS: [u8; 8] = [0xfc, 0x00, 0x7e, 0x00, 0xfe, 0x12, 0x72, 0x1e,];

pub const GLYPH_AUDIO_HD: [u8; 8] = [0x00, 0x66, 0x66, 0x7e, 0x7e, 0x66, 0x66, 0x00,];
pub const GLYPH_AUDIO_SD: [u8; 8] = [0x00, 0x3c, 0x66, 0x60, 0x1c, 0x46, 0x66, 0x3c,];
pub const GLYPH_AUDIO_DSD: [u8; 8] = [0x00, 0x78, 0x6c, 0x66, 0x66, 0x6c, 0x78, 0x00,];

// 'lymons', 108x47px
pub const LYMONS_IMAGE_RAW_DATA: &[u8; 658] = &[
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x07, 0x80, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x01, 0xf8, 0x00, 0x07, 0x80, 0x00, 0x00, 0xf8, 0x01, 0xc0, 0x00, 0x00, 0x00, 
	0x00, 0x07, 0xfc, 0x00, 0x07, 0x80, 0x00, 0x00, 0xf8, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x0f, 
	0xfc, 0x00, 0x07, 0x80, 0x00, 0x00, 0xf8, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xf0, 0x00, 
	0x07, 0x80, 0x00, 0x00, 0xfc, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x07, 0x80, 
	0x00, 0x00, 0xfc, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 
	0xfc, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x07, 0x80, 0x00, 0xf8, 0xfe, 0x07, 
	0xe0, 0x1f, 0x80, 0x01, 0xc0, 0x7c, 0x00, 0x00, 0x07, 0x81, 0xe0, 0xd8, 0xfe, 0x0f, 0xf0, 0x6a, 
	0xc0, 0x03, 0x70, 0x78, 0x00, 0x00, 0x07, 0x81, 0xa0, 0xa9, 0xfe, 0x0f, 0xf0, 0xd5, 0x61, 0xf6, 
	0xb8, 0x7c, 0x00, 0x00, 0x07, 0x81, 0x60, 0xd9, 0xfe, 0x0f, 0xf1, 0xaa, 0xb1, 0x5d, 0x58, 0x7e, 
	0x00, 0x00, 0x0f, 0x83, 0xa0, 0xa9, 0xff, 0x1f, 0xf1, 0x5f, 0x59, 0xba, 0xac, 0x3f, 0x80, 0x00, 
	0x0f, 0x83, 0x60, 0xd9, 0xff, 0x1f, 0xf2, 0xb0, 0xa9, 0xd5, 0xd4, 0x3f, 0xe0, 0x00, 0x0f, 0x82, 
	0xa0, 0xa9, 0xff, 0x1f, 0xf3, 0x60, 0x55, 0xbb, 0x6c, 0x1f, 0xf8, 0x00, 0x0f, 0x83, 0x60, 0xd9, 
	0xff, 0xbf, 0xf2, 0xe0, 0x6d, 0xd7, 0x36, 0x07, 0xfc, 0x00, 0x0f, 0x82, 0xa0, 0xa9, 0xff, 0xbf, 
	0xf5, 0x40, 0x74, 0xaa, 0x2a, 0x01, 0xfe, 0x00, 0x0f, 0x81, 0x60, 0xd9, 0xff, 0xbf, 0xf6, 0xc0, 
	0x2c, 0xd6, 0x36, 0x00, 0x7f, 0x00, 0x0f, 0x81, 0xa0, 0xa9, 0xf7, 0xfd, 0xf5, 0x40, 0x34, 0xae, 
	0x2a, 0x00, 0x3f, 0x00, 0x0f, 0x81, 0x70, 0xd9, 0xf7, 0xfd, 0xf6, 0xc0, 0x2c, 0xd4, 0x16, 0x00, 
	0x1f, 0x00, 0x0f, 0x81, 0xb0, 0xa9, 0xf7, 0xfd, 0xf5, 0x40, 0x34, 0xac, 0x1b, 0x00, 0x0f, 0x00, 
	0x0f, 0x81, 0x50, 0xd9, 0xf3, 0xf9, 0xf6, 0xc0, 0x6c, 0xd4, 0x15, 0x00, 0x0f, 0x00, 0x0f, 0x81, 
	0xb8, 0xb1, 0xf3, 0xf9, 0xf3, 0x60, 0x54, 0xac, 0x1b, 0x00, 0x1f, 0x00, 0x0f, 0x80, 0xd8, 0xd1, 
	0xe3, 0xf8, 0xf2, 0xa0, 0x6c, 0xd8, 0x15, 0x00, 0x7f, 0x00, 0x0f, 0x80, 0xad, 0xb1, 0xe1, 0xf0, 
	0xf3, 0x70, 0xd8, 0xa8, 0x1b, 0x01, 0xfe, 0x00, 0x0f, 0xff, 0xd7, 0x51, 0xe1, 0xf0, 0xf1, 0xbf, 
	0xa8, 0xd8, 0x15, 0x0f, 0xfc, 0x00, 0x0f, 0xff, 0xaa, 0xb1, 0xe1, 0xf0, 0xf1, 0x55, 0x50, 0xa8, 
	0x1b, 0x7f, 0xf8, 0x00, 0x0f, 0xff, 0xb5, 0x51, 0xe0, 0x00, 0xf0, 0xaa, 0xa0, 0xd8, 0x15, 0x7f, 
	0xe0, 0x00, 0x0f, 0xff, 0x8e, 0xa1, 0xe0, 0x00, 0xf0, 0x75, 0xc0, 0xf0, 0x1b, 0x7f, 0x80, 0x00, 
	0x0f, 0xff, 0x83, 0x61, 0xe0, 0x00, 0xf0, 0x1f, 0x80, 0x10, 0x15, 0x7e, 0x00, 0x00, 0x00, 0x00, 
	0x02, 0xa0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x30, 0x00, 0x00, 0x00, 0x00, 0x05, 0x40, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a, 0xc0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x80, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xd5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0xaa, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0x5c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
	0xb0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00
];

